openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: 'http://localhost:8080'
    description: Generated server url
paths:
  /news:
    get:
      tags:
        - news-controller
      operationId: getNews
      parameters:
        - name: page
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/Pageable'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageNews'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ReponseServeurErreurErreur'
    post:
      tags:
        - news-controller
      operationId: createNews
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/News'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ReponseServeurNews'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ReponseServeurErreurErreur'
  '/news/{id}':
    delete:
      tags:
        - news-controller
      operationId: deleteNews
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: No Content
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ReponseServeurString'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ReponseServeurErreurErreur'
components:
  schemas:
    Erreur:
      type: object
      properties:
        champ:
          type: string
        message:
          type: string
    ReponseServeurErreurErreur:
      type: object
      properties:
        erreur:
          $ref: '#/components/schemas/Erreur'
    News:
      required:
        - datePublication
      type: object
      properties:
        id:
          type: integer
          format: int64
        datePublication:
          type: string
          format: date-time
        resume:
          maxLength: 2147483647
          minLength: 1
          type: string
        contenu:
          maxLength: 2147483647
          minLength: 10
          type: string
    ReponseServeurNews:
      type: object
      properties:
        payload:
          $ref: '#/components/schemas/News'
    Pageable:
      type: object
      properties:
        page:
          minimum: 0
          type: integer
          format: int32
        size:
          minimum: 1
          type: integer
          format: int32
        sort:
          type: array
          items:
            type: string
    PageNews:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/News'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/Sort'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/Pageable'
        empty:
          type: boolean
    Sort:
      type: object
      properties:
        sorted:
          type: boolean
        unsorted:
          type: boolean
        empty:
          type: boolean
    ReponseServeurString:
      type: object
      properties:
        payload:
          type: string
